{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/jakkaphan.c/code/nextjs/firstweb/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/jakkaphan.c/code/nextjs/firstweb/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar mysql = require('serverless-mysql');\n\nvar db = mysql({\n  config: {\n    host: process.env.MYSQL_HOST,\n    database: process.env.MYSQL_DATABASE,\n    user: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD\n  }\n});\n\nexports.query = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return db.query(query);\n\n          case 3:\n            results = _context.sent;\n            _context.next = 6;\n            return db.end();\n\n          case 6:\n            return _context.abrupt(\"return\", results);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/jakkaphan.c/code/nextjs/firstweb/db.config.js"],"names":["mysql","require","db","config","host","process","env","MYSQL_HOST","database","MYSQL_DATABASE","user","MYSQL_USER","password","MYSQL_PASSWORD","exports","query","results","end","error"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAMC,EAAE,GAAGF,KAAK,CAAC;AACfG,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADZ;AAENC,IAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,cAFhB;AAGNC,IAAAA,IAAI,EAAEL,OAAO,CAACC,GAAR,CAAYK,UAHZ;AAINC,IAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJhB;AADO,CAAD,CAAhB;;AASAC,OAAO,CAACC,KAAR;AAAA,sEAAgB,iBAAMA,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUb,EAAE,CAACa,KAAH,CAASA,KAAT,CAFV;;AAAA;AAENC,YAAAA,OAFM;AAAA;AAAA,mBAGNd,EAAE,CAACe,GAAH,EAHM;;AAAA;AAAA,6CAILD,OAJK;;AAAA;AAAA;AAAA;AAAA,6CAML;AAAEE,cAAAA,KAAK;AAAP,aANK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const mysql = require('serverless-mysql')\n\nconst db = mysql({\n  config: {\n    host: process.env.MYSQL_HOST,\n    database: process.env.MYSQL_DATABASE,\n    user: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD\n  }\n})\n\nexports.query = async query => {\n  try {\n    const results = await db.query(query)\n    await db.end()\n    return results\n  } catch (error) {\n    return { error }\n  }\n}"]},"metadata":{},"sourceType":"script"}