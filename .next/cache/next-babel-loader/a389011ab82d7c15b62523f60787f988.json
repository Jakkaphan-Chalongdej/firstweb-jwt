{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport Router from 'next/router';\nexport default function Form() {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n\n  async function submitHandler(e) {\n    setSubmitting(true);\n    e.preventDefault();\n\n    try {\n      const res = await fetch('/api/create-entry', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      setSubmitting(false);\n      const json = await res.json();\n      if (!res.ok) throw Error(json.message);\n      Router.push('/');\n    } catch (e) {\n      throw Error(e.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"title\",\n        children: /*#__PURE__*/_jsx(\"h3\", {\n          className: \"font-bold\",\n          children: \"Title\"\n        })\n      }), /*#__PURE__*/_jsx(\"input\", {\n        id: \"title\",\n        className: \"shadow border rounded w-full\",\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"content\",\n        children: /*#__PURE__*/_jsx(\"h3\", {\n          className: \"font-bold\",\n          children: \"Content\"\n        })\n      }), /*#__PURE__*/_jsx(\"textarea\", {\n        className: \"shadow border resize-none focus:shadow-outline w-full h-48\",\n        id: \"content\",\n        name: \"content\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      })]\n    }), /*#__PURE__*/_jsx(\"button\", {\n      disabled: submitting,\n      type: \"submit\",\n      children: submitting ? 'Creating ...' : 'Create'\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/jakkaphan.c/code/nextjs/firstweb/components/layouts/form.js"],"names":["useState","Router","Form","title","setTitle","content","setContent","submitting","setSubmitting","submitHandler","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","json","ok","Error","message","push","target","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAIA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,iBAAeS,aAAf,CAA6BC,CAA7B,EAAgC;AAC9BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;AAC3CC,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFkC;AAK3CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,UAAAA,KADmB;AAEnBE,UAAAA;AAFmB,SAAf;AALqC,OAAtB,CAAvB;AAUAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA,YAAMW,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAJ,EAAnB;AACA,UAAI,CAACP,GAAG,CAACQ,EAAT,EAAa,MAAMC,KAAK,CAACF,IAAI,CAACG,OAAN,CAAX;AACbrB,MAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACD,KAfD,CAeE,OAAOb,CAAP,EAAU;AACV,YAAMW,KAAK,CAACX,CAAC,CAACY,OAAH,CAAX;AACD;AACF;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAEb,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AADF,QADF,eAIE;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,SAAS,EAAC,8BAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,KAAK,EAAEN,KALT;AAME,QAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV;AAN3B,QAJF;AAAA,MADF,eAcE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AADF,QADF,eAIE;AACE,QAAA,SAAS,EAAC,4DADZ;AAEE,QAAA,EAAE,EAAC,SAFL;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,KAAK,EAAEpB,OAJT;AAKE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV;AAL7B,QAJF;AAAA,MAdF,eA0BE;AAAQ,MAAA,QAAQ,EAAElB,UAAlB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAAA,gBACGA,UAAU,GAAG,cAAH,GAAoB;AADjC,MA1BF;AAAA,IADF;AAgCD","sourcesContent":["import { useState } from 'react'\nimport Router from 'next/router'\n\n\n\nexport default function Form() {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [submitting, setSubmitting] = useState(false)\n\n  async function submitHandler(e) {\n    setSubmitting(true)\n    e.preventDefault()\n    try {\n      const res = await fetch('/api/create-entry', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title,\n          content,\n        }),\n      })\n      setSubmitting(false)\n      const json = await res.json()\n      if (!res.ok) throw Error(json.message)\n      Router.push('/')\n    } catch (e) {\n      throw Error(e.message)\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"my-4\">\n        <label htmlFor=\"title\">\n          <h3 className=\"font-bold\">Title</h3>\n        </label>\n        <input\n          id=\"title\"\n          className=\"shadow border rounded w-full\"\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div className=\"my-4\">\n        <label htmlFor=\"content\">\n          <h3 className=\"font-bold\">Content</h3>\n        </label>\n        <textarea\n          className=\"shadow border resize-none focus:shadow-outline w-full h-48\"\n          id=\"content\"\n          name=\"content\"\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n        />\n      </div>\n      <button disabled={submitting} type=\"submit\">\n        {submitting ? 'Creating ...' : 'Create'}\n      </button>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}